{{>store/common/store_header}}
<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 mt-5">
    <div>
        <h1>가게 명 : {{storeName}}</h1>
        <h2 class="h2">우리 가게 메뉴 등록</h2>
    </div>
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <form id="menuForm" method="post" enctype="multipart/form-data">
            <div class="form-group row">
                <label for="inputFile" class="col-sm-2 col-form-label"><strong>첨부 파일</strong></label>
                <div class="col-sm-10">
                    <div class="custom-file" id="inputFile">
                        <input name="file" type="file" class="custom-file-input" id="customFile" required>
                        <label class="custom-file-label" for="customFile">파일을 선택해 주세요.</label>
                    </div>
                </div>
            </div>
            <div class="col-12">
                <label for="inputMenuName" class="form-label">메뉴이름</label>
                <input type="text" class="form-control" id="inputMenuName" value="" required>
            </div>
            <div class="col-12" id="menuPriceDiv">
                <label for="inputMenuPrice" class="form-label">메뉴가격</label>
                <input type="text" class="form-control" id="inputMenuPrice" value="" required>
                <label class="form-label text-sm text-danger" style="display: none" id="onlyNum">숫자만 입력 가능합니다.</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1" value="1">
                <label class="form-check-label" for="flexRadioDefault1">
                    대표메뉴
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" value="0">
                <label class="form-check-label" for="flexRadioDefault1">
                    일반메뉴
                </label>
            </div>
            <div class="col-auto">
                <input class="btn btn-primary" type="button" role="button" value="메뉴등록하기" id="menuCreateBtn">
            </div>

        </form>
    </div>
    <input type="hidden" value="{{storeIdx}}" id="hiddenStoreIdx">
</main>
</div>
</div>
</body>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<!-- create login & logout button -->
<script>
    const fooLogout = () => {
        window.sessionStorage.clear();
        function kakaoLogout() {
            Kakao.init('인증키');
            //로컬전용
            //location.href = 'https://kauth.kakao.com/oauth/logout?client_id=90795a88763d2cd0be72934b69a89f7d&logout_redirect_uri=http://localhost:9090/owner/store/main';
            location.href = 'https://kauth.kakao.com/oauth/logout?client_id=90795a88763d2cd0be72934b69a89f7d&logout_redirect_uri=http://52.78.65.121:9090/owner/store/main';

        };
        kakaoLogout();
        alert('로그아웃 성공');
    };

    const fooLogin = () => {
        location.href="/loginForm/owner";
    }

    /** set left menuBar href */
    const set_menu = () => {
        const storeIdxVal = window.sessionStorage.getItem('storeIdx');
        const ownerIdxVal = JSON.parse(window.sessionStorage.getItem("memberData"));
        let ownerIdx = ownerIdxVal.memberData.ownerIdx;
        document.getElementById('first-item-href').setAttribute('href', '/owner/selectStore/' +ownerIdx);
        document.getElementById('first-half-item-href').setAttribute('href', '/owner/manageStore/'+storeIdxVal);
        document.getElementById('second-item-href').setAttribute('href', '/owner/storeInfo/' +storeIdxVal);
        document.getElementById('third-item-href').setAttribute('href', '/owner/menu/'+storeIdxVal);
        document.getElementById('fourth-item-href').setAttribute('href', '/owner/menu/create/'+storeIdxVal);
        document.getElementById('fifth-item-href').setAttribute('href', '/owner/store/'+storeIdxVal+'/reviews');
        document.getElementById('sixth-item-href').setAttribute('href', '/owner/store/tradeHistory/infinity/'+storeIdxVal);
        document.getElementById('seventh-item-href').setAttribute('href', '/owner/create/flag/'+storeIdxVal);
    };

    document.getElementById('inputMenuPrice').addEventListener('keyup', () => {
        let str = document.getElementById('inputMenuPrice').value;
        let check = /^[0-9]+$/;
        let newlabel = document.getElementById('onlyNum');
        if (!check.test(str)) {
            newlabel.style.display = 'block';
        }else{
            newlabel.style.display = 'none';
        }
    })

    window.onload = () => {
        // 꺼내보자
        //console.log(JSON.stringify(window.sessionStorage.getItem("memberData")));

        const parentDiv = document.getElementById('login-logout-section');
        if(window.sessionStorage.getItem("token")){
            const logoutBtn = document.createElement('button');
            logoutBtn.setAttribute('class' , 'btn btn-outline-primary me-2');
            logoutBtn.onclick = fooLogout;
            logoutBtn.innerHTML = '로그아웃';
            parentDiv.appendChild(logoutBtn);

        }else{
            const loginBtn = document.createElement('button');
            loginBtn.setAttribute('class' , 'btn btn-outline-primary me-2');
            loginBtn.onclick = fooLogin;
            loginBtn.innerHTML = '로그인';
            parentDiv.appendChild(loginBtn);
        }

        set_menu();
    }
</script>
</html>


<script>
    var main = {
        init: function () {
            var _this = this;

            $('#menuCreateBtn').on('click', function () {
                _this.checkNullInput();
                _this.postsSave();
            });
        },

        checkNullInput : function () {
            if($('#inputMenuName').val()==""||$('#inputMenuPrice').val()==""||$('#customFile')[0].files[0]==undefined) {
                alert('모든 항목을 채워주세요.');
                throw 'some inputs are empty!';
                return;
            };
        },

        postsSave : function () {
            let data = {
                menuName: $('#inputMenuName').val(),
                menuPrice: $('#inputMenuPrice').val(),
                menuKingMenu: $('input:radio[name=flexRadioDefault]:checked').val(),
                storeIdx:{
                    storeIdx: $('#hiddenStoreIdx').val()
                }
            };
            let form = $('#menuForm')[0];
            let formData = new FormData(form);
            formData.append('file', $('#customFile'));
            formData.append('key', new Blob([JSON.stringify(data)], {type: "application/json"}));

            $.ajax({
                type: 'POST',
                url: '/create/menu',
                data: formData,
                processData: false,
                contentType: false

            }).done(function () {
                alert('메뉴가 등록되었습니다.');
                location.reload();
            }).fail(function (error) {
                alert(JSON.stringify(error));
            });
        }
    }
    main.init();
</script>