<!-- Modal -->
<div class="modal fade" id="menu-edit-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">메뉴수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!--menu update form-->
                    <!-- menu name -->
                    <div class="mb-3">
                        <label class="form-label">메뉴명</label>
                        <input type="text" class="form-control form-control-sm" id="edit-menu-name">
                    </div>
                    <!-- menu price -->
                    <div class="mb-3">
                        <label class="form-label">메뉴 가격</label>
                        <input type="text" class="form-control form-control-sm" rows="3" id="edit-menu-price"></input>
                    </div>
                    <!-- 메뉴이미지 -->
                    <div class="mb-3">
                        <label class="form-label">메뉴 이미지</label>
                        <input type="file" class="form-control form-control-sm" rows="3" id="edit-menu-image" src="/image/1.JPG"></input>
                        <div class="selected_img"><img src="" /></div>
                        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
                        <script>
                            $("#edit-menu-image").change(function(){
                                if(this.files && this.files[0]) {
                                    var reader = new FileReader;
                                    reader.onload = function(data) {
                                        $(".selected_img img").attr("src", data.target.result).width(300);
                                    }
                                    reader.readAsDataURL(this.files[0]);
                                }
                            });
                        </script>
                    </div>
                    <!-- 히든값 -->
                    <input type="text" id="edit-menu-idx" value="">
                    <!-- 전송버튼 -->
                    <button type="button" class="btn btn-outline-primary btn-sm" id="comment-update-btn">수정 완료</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!--모달 이벤트 처리-->
<script>
    {
        // 모달 요소 선택
        const commentEditModal = document.querySelector("#menu-edit-modal");
        commentEditModal.addEventListener("show.bs.modal", function (event){
            // Button that triggered the modal 트리거 버튼 선택
            const triggerBtn = event.relatedTarget;
            // Extract info from data-bs-* attributes 데이터 가져오기
            const idx = triggerBtn.getAttribute('data-bs-menuidx');
            const name = triggerBtn.getAttribute('data-bs-menuname');
            const price = triggerBtn.getAttribute('data-bs-menuprice');
            const img = triggerBtn.getAttribute('data-bs-menuimg');
            const kingmenu = triggerBtn.getAttribute('data-bs-menukingmenu');
            // 데이터 반영
            document.querySelector("#edit-menu-idx").value = idx; // hidden
            document.querySelector("#edit-menu-name").value = name;
            document.querySelector("#edit-menu-price").value = price;
            document.querySelector("#edit-menu-image").value = img;
            document.querySelector("#edit-menu-kingmenu").value = kingmenu;

        });
    }

    {
        // 수정 완료 버튼 가져오기
        const commentUpdateBtn = document.querySelector("#comment-update-btn");
        // 클릭 이벤트 감지 및 처리
        commentUpdateBtn.addEventListener("click", function () {
            // 수정 댓글 객체 생성
            const comment = {
                id: document.querySelector("#edit-comment-id").value,
                nickname: document.querySelector("#edit-comment-nickname").value,
                body: document.querySelector("#edit-comment-body").value,
                article_id: document.querySelector("#edit-comment-article-id").value
            };
            // 수정 REST API 호출 - fetch()
            const url = "/api/comments/" + comment.id;
            fetch(url, {
                method: "PATCH", // 대문자로 작성
                body: JSON.stringify(comment), // 수정된 댓글 객체를 JSON으로 전달
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(response => {
                // http 응답코드에 따른 메시지 출력
                const msg = (response.ok) ? "댓글 수정 완료" : "댓글 수정 실패!";
                alert(msg);
                location.reload();
            });
        });
    }
</script>