<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        body {
            margin: 0px;
            font-family: 'Do Hyeon', sans-serif;
        }

        header {
            background-color: #2AC1BC;
            height: 90px;
            font-size: 2rem;
            vertical-align: center;
        }

        #header_div {
            display: flex;
        }

        #header_div_div {
            margin-top: 19px;
            margin-right: auto;
            margin-left: 35px;
        }

        #header_div_logout {
            margin-top: 19px;
            margin-left: auto;
            margin-right: 35px;
        }

        #side_bar {
            height: 100%;
            width: 250px;
            background-color: rgba(245, 245, 245);
            float: left;
        }

        #side_bar::after {
            content: '';

            display: block;

            clear: both;
        }

        #print_div_parent {
            font-size: 25px;
        }

        .div5 {
            margin-bottom: 25px;
        }

        button {
            background-color: rgba(42, 193, 188);
            font-family: 'Do Hyeon', sans-serif;
            font-size: 18px;
            color: white;
        }

        #header_div_logout {
            width: 100px;
            border-radius: 15px;
        }

        #body_div {
            background-color: rgba(245, 245, 245);
            text-align: center;
            height: 100%;
        }

        #inner_div {
            display: inline-block;
            width: 50%;
            background-color: white;
            height: 100%;
        }
    </style>
</head>
<body>
<header>
    <div id="header_div">
        <div id="header_div_div">민족의 배달 라이더</div>
        <button id="header_div_logout">로그아웃</button>
        <button id="btnSend" class="btn btn-primary">직접 요청 보내버리기</button>
    </div>
</header>
<div id="body_div">
    <div id="inner_div">
        <div>현재위치</div>
        <div id="print_div_parent">
            <div>배달 요청</div>
            <div style="height: 15px"></div>
            <div id="print_div">
            </div>
        </div>


        <div id="parent_map">

            <div id="map" style="width:100%;height:40%;"></div>

            <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
            <script type="text/javascript"
                    src="//dapi.kakao.com/v2/maps/sdk.js?appkey=6068832a63380d546f355acf74c40240&libraries=services"></script>

            <input type="button" value="픽업완료" id="pickup">
            <input type="button" value="배달완료" id="deliveryComplete">
        </div>
    </div>
</div>

<script
        src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>

<script type="text/javascript"
        src="//dapi.kakao.com/v2/maps/sdk.js?appkey=6068832a63380d546f355acf74c40240&libraries=services"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.3.0/sockjs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
<script>
    $(document).ready(function () {
        connectStomp();
    });

    document.getElementById("header_div_logout").addEventListener('click',function (){
        window.sessionStorage.clear();
        location.href="/loginform/deliver"
    });

    var geocoder = new kakao.maps.services.Geocoder();

    document.getElementById("parent_map").style.display = "none";
    const mem = JSON.parse(window.sessionStorage.getItem("memberData")).memberData;
    let tradeIdx;

    var socket = null;
    var isStomp = false;

    function accept() {
        fetch("/deliver/assign/complete", {
            method: "put",
            headers: {"Content-Type": "application/json; charset:UTF-8"},
            body: JSON.stringify({
                deliverIdx: mem.deliverIdx,
                tradeIdx: this.id
            })
        });
    }

    function deny() {
        document.getElementById("div"+this.id).remove();
    }

    function connectStomp() {
        var sock = new SockJS("/deliver");
        var client = Stomp.over(sock);
        isStomp = true;
        socket = client;
        socket.connect({}, function (frame) {
            socket.subscribe('/topic/deliver/' + mem.deliverIdx, function (event) {
                var message = JSON.parse(event.body);
                if (message.message == "배달요청") {
                    var div1 = document.createElement("div");
                    div1.id = "div" + message.tradeHistoryIdx;
                    var div2 = document.createElement("div");
                    div2.innerText = message.storeName;
                    var div3 = document.createElement("div");
                    div3.innerText = "가게 주소 :" + message.storeBasicAddr;
                    var div4 = document.createElement("div");
                    var div5 = document.createElement("div");
                    div4.innerText = "목적지 : " + message.userBasicAddr;
                    var input1 = document.createElement("input");
                    input1.type = "button";
                    input1.value = "요청받기";
                    input1.addEventListener('click', accept);
                    input1.id = message.tradeHistoryIdx;
                    input1.className = message.storeIdx;
                    var input2 = document.createElement("input");
                    input2.id = message.tradeHistoryIdx;
                    input2.type = "button";
                    input2.value = "거절하기";
                    input2.addEventListener('click', deny);
                    div5.append(input1);
                    div5.append(input2);
                    div5.className = "div5";
                    div1.append(div2);
                    div1.append(div3);
                    div1.append(div4);
                    div1.append(div5);
                    document.getElementById("print_div").append(div1);
                } else if (message.message == "배정성공") {
                    alert("배정성공 및 배달 시작");
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(function (position) {
                            const cur_lat = position.coords.latitude;
                            const cur_lng = position.coords.longitude;


                            const cateImg = "https://i.esdrop.com/d/f/3IfGDhTdT6/2ifHfz3s3P.png";
                            const cateImageSize = new kakao.maps.Size(33, 37); // 마커이미지의 크기입니다
                            const cateImageOption = {offset: new kakao.maps.Point(15, 69)};
                            const distLat = message.storeLat - cur_lat;
                            const distLng = message.storeLng - cur_lng;
                            const dist = Math.sqrt(Math.abs(distLat * distLat) + Math.abs(distLng * distLng));
                            var mapContainer = document.getElementById('map'),
                                    mapOption = {
                                        center: new kakao.maps.LatLng((message.storeLat + cur_lat) / 2, (message.storeLng + cur_lng) / 2),
                                        level: distCalculator(dist) // 지도의 확대 레벨
                                    };

                            var map = new kakao.maps.Map(mapContainer, mapOption);

                            var storeMarkerImage = new kakao.maps.MarkerImage(cateImg, cateImageSize, cateImageOption)
                            var storeMarkerPosition = new kakao.maps.LatLng(message.storeLat, message.storeLng);
                            var storeMarker = new kakao.maps.Marker({
                                position: storeMarkerPosition,
                                image: storeMarkerImage
                            });
                            storeMarker.setMap(map);
                            var iwContent = message.storeName,
                                    iwPosition = new kakao.maps.LatLng(message.storeLat, message.storeLng);

                            var infowindow = new kakao.maps.InfoWindow({
                                position: iwPosition,
                                content: iwContent
                            });
                            infowindow.open(map, storeMarker);

                            var delMarkerImage = new kakao.maps.MarkerImage("https://i.esdrop.com/d/f/3IfGDhTdT6/yK5FGL4WFo.png", new kakao.maps.Size(30, 30), {offset: new kakao.maps.Point(15, 69)})
                            var delMarkerPosition = new kakao.maps.LatLng(cur_lat, cur_lng);
                            var delMarker = new kakao.maps.Marker({
                                position: delMarkerPosition,
                                image: delMarkerImage
                            });
                            delMarker.setMap(map);

                            geocoder.addressSearch(message.userBasicAddr, function(result, status) {

                                // 정상적으로 검색이 완료됐으면
                                if (status === kakao.maps.services.Status.OK) {

                                    var userMarkerImage = new kakao.maps.MarkerImage("https://i.esdrop.com/d/f/3IfGDhTdT6/0X8EYtgq4Z.png", cateImageSize, cateImageOption)
                                    var userMarkerPosition = new kakao.maps.LatLng(result[0].y, result[0].x);
                                    var userMarker = new kakao.maps.Marker({
                                        position: userMarkerPosition,
                                        image: userMarkerImage
                                    });
                                    userMarker.setMap(map);
                                    var iwContent = message.userBasicAddr,
                                            iwPosition = new kakao.maps.LatLng(result[0].y, result[0].x);

                                    var infowindow = new kakao.maps.InfoWindow({
                                        position: iwPosition,
                                        content: iwContent
                                    });
                                    infowindow.open(map, userMarker);
                                }
                            });

                            function distCalculator(dist) {
                                if (dist > 0.08) {
                                    return 8;
                                } else if (dist > 0.04) {
                                    return 7;
                                } else if (dist > 0.02) {
                                    return 6;
                                } else if (dist > 0.01) {
                                    return 5;
                                } else if (dist > 0.004) {
                                    return 4;
                                } else {
                                    return 3;
                                }
                            }
                        });
                    }
                    document.getElementById("print_div_parent").style.display = "none";
                    document.getElementById("parent_map").style.display = "block";
                    document.getElementById("pickup").style.display = "block";
                    document.getElementById("deliveryComplete").style.display = "none";
                    document.getElementById("pickup").addEventListener('click', () => pickup(message.tradeHistoryIdx, message.storeIdx));
                    document.getElementById("deliveryComplete").addEventListener('click', () => deliveryComplete(message.tradeHistoryIdx, message.storeIdx));
                } else if (message.message == "픽업완료") {
                    document.getElementById("pickup").style.display = "none";
                    document.getElementById("deliveryComplete").style.display = "block";
                } else if (message.message == "배달완료") {
                    document.getElementById("print_div_parent").style.display = "block";
                    document.getElementById("parent_map").style.display = "none";
                } else if (message.message == "배정완료") {
                    document.getElementById("div" + message.tradeHistoryIdx).remove();
                }
            });
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var lat = position.coords.latitude,
                            lon = position.coords.longitude;
                    setInterval(function () {
                        socket.send('/app/chat/refresh', {}, JSON.stringify({
                            "id": mem.deliverIdx,
                            "lat": lat,
                            "lng": lon
                        }))
                    }, 10000);
                });
            }
        });
    }

    function pickup(tradeIdx, storeIdx) {
        socket.send('/app/chat/pickup', {}, JSON.stringify({
            "message": "123",
            "tradeHistoryIdx": tradeIdx,
            "storeIdx": storeIdx
        }));
    }

    function deliveryComplete(tradeIdx, storeIdx) {
        socket.send('/app/chat/complete', {}, JSON.stringify({
            "message": "123",
            "tradeHistoryIdx": tradeIdx,
            "storeIdx": storeIdx
        }));
    }
</script>
<!-- FONT-->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap" rel="stylesheet">
</body>
</html>