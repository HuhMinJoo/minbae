{{>store/common/store_header}}


<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 mt-5">
    <div>
        <h2 class="h2">우리가게 정보관리 페이지</h2>
    </div>
    <div class="mt-5">
        <h3 class="h3">가게 일반 정보</h3>
    </div>
    <form class="row g-3 mb-5">
        {{#storeInfo}}
            <div class="col-12">
                <label for="inputStoreName" class="form-label">가게 이름</label>
                <input type="text" class="form-control" id="inputStoreName" value="{{storeName}}">
            </div>
            <div class="col-12">
                <label for="inputStoreCategory" class="form-label">가게 업종</label>
                <select id="inputStoreCategory" class="form-select">
                    <option value="CHICKEN">치킨</option>
                    <option value="CHINESEFOOD">중국집</option>
                    <option value="DESSERT">디저트/카페</option>
                    <option value="BUNSIK">분식</option>
                    <option value="PIZZA">피자</option>
                    <option value="JAPANESEFOOD">돈까스/회</option>
                </select>
            </div>
            <div class="col-12">
                <label for="inputStoreTel" class="form-label">가게 전화번호</label>
                <input type="text" class="form-control" id="inputStoreTel" value="{{storeTel}}">
            </div>
            <!--addr start-->
            <div class="col-2">
                <input type="button" class="btn btn-outline-primary mb-2" onclick="sample4_execDaumPostcode()" value="주소 찾기">
                <input type="text" class="form-control" id="sample4_postcode" value="우편번호" readonly>
            </div>
            <div class="col-12">
                <label for="inputStoreBasicAddr" class="form-label">가게 도로명 주소</label>
                <input type="text" class="form-control" id="inputStoreBasicAddr" value="{{storeBasicAddr}}">

                <label for="inputStoreDetailAddr" class="form-label">가게 상세 주소</label>
                <input type="text" class="form-control" id="inputStoreDetailAddr" value="{{storeDetailAddr}}">
            </div>
            <!--addr end-->
            <!--hidden values-->
            <input type="hidden" id="ownerIdx" value="{{ownerIdx.ownerIdx}}" readonly>
            <input type="hidden" id="storeIdx" value="{{storeIdx}}" readonly>
            <input type="hidden" id="sample4_jibunAddress" value="" readonly><span id="guide" style="color:#999;display:none"></span>
            <input type="hidden" id="lat" value="{{storeLat}}" readonly>
            <input type="hidden" id="lng" value="{{storeLng}}" readonly>
            <input type="hidden" id="store_category" value="{{storeCategory}}" readonly>

        {{/storeInfo}}
        <div class="col-6">
            <input type="button" class="btn btn-outline-warning" value="수정 취소" onclick="window.location = `/owner/manageStore/${window.sessionStorage.getItem('storeIdx')}`;">
            <input type="button" class="btn btn-outline-primary" value="가게 정보 수정완료" id="update-btn">
        </div>
    </form>

    <hr>

    <div class="mt-5">
        <h3>가게 상세 정보</h3>
    </div>
    <form class="row g-3" id="sotreDetailForm"  enctype="multipart/form-data">
        {{#StoreDetailInfo}}
            <div class="col-12">
                <label for="inputStoreDetailDeliverPrice" class="form-label">배달비설정</label>
                <input type="text" class="form-control" id="inputStoreDetailDeliverPrice" value="{{storeDetailDeliverPrice}}">
            </div>
            <div class="col-12">
                <label for="inputStoreDetailMinimumPrice" class="form-label">최소주문금액</label>
                <input type="text" class="form-control" id="inputStoreDetailMinimumPrice" value="{{storeDetailMinimumPrice}}">
            </div>
            <div class="col-12">
                <label for="inputStoreDetailTakeOutDiscount" class="form-label">포장할인금액</label>
                <input type="text" class="form-control" id="inputStoreDetailTakeOutDiscount" value="{{storeDetailTakeOutDiscount}}">
            </div>
            <div class="col-12">
                <label for="inputStoreDetailInfoImg" class="form-label">가게대표이미지</label>
                <input type="file" class="form-control" name="storeImg" id="inputStoreDetailInfoImg">
                {{#storeDetailInfoImg}}
                <label style="color: red;">등록된 이미지가 존재합니다. 이미지를 수정하려면 첨부파일을 업로드해주세요!</label>
                {{/storeDetailInfoImg}}
                {{^storeDetailInfoImg}}
                    <label>등록된 이미지가 존재하지 않습니다. 이미지를 추가해보세요!</label>
                {{/storeDetailInfoImg}}
            </div>
            <div class="col-12">
                <label for="inputStoreDetailInfoText" class="form-label">가게소개글</label>
                <div class="form-floating">
                    <textarea class="form-control" placeholder="Leave a comment here" id="inputStoreDetailInfoText" style="height: 100px">{{storeDetailInfoText}}</textarea>
                </div>
            </div>
            <div class="col-12">
                <label for="inputStoreDetailMenuText" class="form-label">메뉴소개글</label>
                <div class="form-floating">
                    <textarea class="form-control" placeholder="Leave a comment here" id="inputStoreDetailMenuText" style="height: 100px">{{storeDetailMenuText}}</textarea>
                </div>
            </div>
            <div class="col-12">
                <label for="inputStoreDetailReviewText" class="form-label">리뷰공지글</label>
                <div class="form-floating">
                    <textarea class="form-control" placeholder="Leave a comment here" id="inputStoreDetailReviewText" style="height: 100px">{{storeDetailReviewText}}</textarea>
                </div>
            </div>

        <input type="hidden" id="inputStoreDetailIdx" value="{{storeDetailIdx}}">
        <input type="hidden" id="storeIdxFromDetail" value="{{store.storeIdx}}" readonly>

        {{/StoreDetailInfo}}
        <div class="col-6">
            <input type="button" class="btn btn-outline-warning"value="수정 취소" onclick="window.location = `/owner/manageStore/${window.sessionStorage.getItem('storeIdx')}`;">
            <input type="button" class="btn btn-outline-primary" value="가게 상세정보 수정완료" id="update-detail-btn">
        </div>
    </form>

    <hr>

    <div class="mt-5 mb-5">
        <h3 class="h3">가게 삭제 요청</h3>
        <button class="btn btn-danger" id="storeDelete">삭제 요청</button>
    </div>
</main>


</div>
</div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<!-- create login & logout button -->
<script>
    const fooLogout = () => {
        window.sessionStorage.clear();
        function kakaoLogout() {
            Kakao.init('인증키');
            //로컬전용
            //location.href = 'https://kauth.kakao.com/oauth/logout?client_id=90795a88763d2cd0be72934b69a89f7d&logout_redirect_uri=http://localhost:9090/owner/store/main';
            location.href = 'https://kauth.kakao.com/oauth/logout?client_id=90795a88763d2cd0be72934b69a89f7d&logout_redirect_uri=http://52.78.65.121:9090/owner/store/main';

        };
        kakaoLogout();
        alert('로그아웃 성공');
    };

    const fooLogin = () => {
        location.href="/loginForm/owner";
    }

    /** set left menuBar href */
    const set_menu = () => {
        const storeIdxVal = window.sessionStorage.getItem('storeIdx');
        const ownerIdxVal = JSON.parse(window.sessionStorage.getItem("memberData"));
        let ownerIdx = ownerIdxVal.memberData.ownerIdx;
        document.getElementById('first-item-href').setAttribute('href', '/owner/selectStore/' +ownerIdx);
        document.getElementById('first-half-item-href').setAttribute('href', '/owner/manageStore/'+storeIdxVal);
        document.getElementById('second-item-href').setAttribute('href', '/owner/storeInfo/' +storeIdxVal);
        document.getElementById('third-item-href').setAttribute('href', '/owner/menu/'+storeIdxVal);
        document.getElementById('fourth-item-href').setAttribute('href', '/owner/menu/create/'+storeIdxVal);
        document.getElementById('fifth-item-href').setAttribute('href', '/owner/store/'+storeIdxVal+'/reviews');
        document.getElementById('sixth-item-href').setAttribute('href', '/owner/store/tradeHistory/infinity/'+storeIdxVal);
        document.getElementById('seventh-item-href').setAttribute('href', '/owner/create/flag/'+storeIdxVal);
    };

    const set_category_selected = () => {
        let store_category = document.getElementById('store_category').value;
        $('#inputStoreCategory').val(`${store_category}`).prop("selected",true);
    };

    window.onload = () => {
        // 꺼내보자
        //console.log(JSON.stringify(window.sessionStorage.getItem("memberData")));

        const parentDiv = document.getElementById('login-logout-section');
        if(window.sessionStorage.getItem("token")){
            const logoutBtn = document.createElement('button');
            logoutBtn.setAttribute('class' , 'btn btn-outline-primary me-2');
            logoutBtn.onclick = fooLogout;
            logoutBtn.innerHTML = '로그아웃';
            parentDiv.appendChild(logoutBtn);

        }else{
            const loginBtn = document.createElement('button');
            loginBtn.setAttribute('class' , 'btn btn-outline-primary me-2');
            loginBtn.onclick = fooLogin;
            loginBtn.innerHTML = '로그인';
            parentDiv.appendChild(loginBtn);
        }

        set_menu();
        set_category_selected();
    }
</script>
</html>


<!--Store info update JS-->
<script>
    const updateStoreBtn = document.querySelector('#update-btn');
    updateStoreBtn.addEventListener('click', function (){
        // store 객체 생성
        const store = {
            storeIdx: document.querySelector("#storeIdx").value,
            ownerIdx: {
              ownerIdx: document.querySelector("#ownerIdx").value
            },
            storeName: document.querySelector("#inputStoreName").value,
            storeCategory: document.querySelector("#inputStoreCategory").value,
            storeBasicAddr: document.querySelector("#inputStoreBasicAddr").value,
            storeDetailAddr: document.querySelector("#inputStoreDetailAddr").value,
            storeLat: document.querySelector("#lat").value,
            storeLng: document.querySelector("#lng").value,
            storeTel: document.querySelector("#inputStoreTel").value
        }
        console.log(JSON.stringify(store));

        // fetch
        const url = "/api/storeInfo/update/"+store.storeIdx;
        //alert(store.storeIdx);
        fetch(url, {
            method: "PATCH",
            body: JSON.stringify(store),
            headers: {
                "Content-Type" : "application/json"
            }
        }).then(response => {
            const msg = (response.ok) ? "수정 성공" : "수정 실패!!";
            alert(msg);
            location.reload();
        });
    });

</script>

<!--Store Detail info update JS-->
<script>
    const updateStoreDetailBtn = document.querySelector('#update-detail-btn');
    updateStoreDetailBtn.addEventListener('click', function (){

        // store 객체 생성
        const storeDetail = {
            storeDetailIdx: document.querySelector("#inputStoreDetailIdx").value,
            storeIdx: {
                storeIdx: document.querySelector("#storeIdxFromDetail").value
            },
            storeDetailDeliverPrice: document.querySelector("#inputStoreDetailDeliverPrice").value,
            storeDetailMinimumPrice: document.querySelector("#inputStoreDetailMinimumPrice").value,
            storeDetailTakeOutDiscount: document.querySelector("#inputStoreDetailTakeOutDiscount").value,
            //storeDetailInfoImg: document.querySelector("#inputStoreDetailInfoImg").value,
            storeDetailInfoText: document.querySelector("#inputStoreDetailInfoText").value,
            storeDetailMenuText: document.querySelector("#inputStoreDetailMenuText").value,
            storeDetailReviewText: document.querySelector("#inputStoreDetailReviewText").value
        }
        console.log(JSON.stringify(storeDetail));

        let updateForm1 = $('#sotreDetailForm')[0];
        let formData1 = new FormData(updateForm1);
        formData1.append('storeImg', $('#inputStoreDetailInfoImg'));
        formData1.append('key', new Blob([JSON.stringify(storeDetail)], {type: "application/json"}));

        $.ajax({
            type: 'PATCH',
            url: "/api/storeDetailInfo/update/"+storeDetail.storeDetailIdx+"/img",
            data: formData1,
            processData: false,
            contentType: false

        }).done(function () {
            alert("상세정보 수정 성공");
            location.reload();
        }).fail(function (error) {
            //alert(JSON.stringify(error));
            alert("상세정보 수정 실패");
            return;
        });

    });
</script>

<!--Store addr search JS-->
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script>
    function sample4_execDaumPostcode() {
        new daum.Postcode({
            oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var roadAddr = data.roadAddress; // 도로명 주소 변수

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById('sample4_postcode').value = data.zonecode; // 우편번호
                document.getElementById("inputStoreBasicAddr").value = roadAddr; // 도로명 주소
                document.getElementById("sample4_jibunAddress").value = data.jibunAddress; // 지번 주소

                var jibun = document.getElementById('sample4_jibunAddress').value;
                $.ajax({
                    url: 'https://dapi.kakao.com/v2/local/search/address.json?query=' + encodeURIComponent(`${jibun}`),
                    type: 'GET',
                    headers: {'Authorization': 'KakaoAK 22e00e7447c5306d5873193d9373f549'}
                }).done(function (data2) {
                    document.getElementById('lat').value = data2.documents[0].y;
                    document.getElementById('lng').value = data2.documents[0].x;
                }).fail(function (error) {
                    alert(JSON.stringify(error));
                });

                var guideTextBox = document.getElementById("guide");
                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
                if(data.autoRoadAddress) {
                    var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
                    guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';
                    guideTextBox.style.display = 'block';

                } else if(data.autoJibunAddress) {
                    alert('지번 주소를 미선택하여 예상지번주소가 입력되었습니다.');
                    var expJibunAddr = data.autoJibunAddress;
                    guideTextBox.innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';
                    guideTextBox.style.display = 'block';

                    // 추가
                    console.log("expJibunAddr=>>>>>>"+expJibunAddr);
                    if(expJibunAddr){
                        $.ajax({
                            url: 'https://dapi.kakao.com/v2/local/search/address.json?query=' + encodeURIComponent(expJibunAddr),
                            type: 'GET',
                            headers: {'Authorization': 'KakaoAK 22e00e7447c5306d5873193d9373f549'}
                        }).done(function (data2) {
                            document.getElementById('lat').value = data2.documents[0].y;
                            document.getElementById('lng').value = data2.documents[0].x;
                            document.getElementById("sample4_jibunAddress").value = expJibunAddr;
                        }).fail(function (error) {
                            alert(JSON.stringify(error));
                        });
                    }
                } else {
                    guideTextBox.innerHTML = '';
                    guideTextBox.style.display = 'none';
                }
            }
        }).open();
    }
</script>

<!--Store delete JS-->
<script>
    const deleteBtn = document.querySelector('#storeDelete');

        deleteBtn.addEventListener("click", () => {
            if(confirm('정말 삭제 하시겠습니까?') == false ){
                return;
            }
            // 삭제 API 호출 및 처리
            let storeIdx = document.querySelector("#storeIdx").value;
            const url = "/api/store/delete/"+storeIdx;
            fetch(url, {
                method: "DELETE"
            }).then(response => {
                if (!response.ok) {
                    alert("가게 삭제 실패..!");
                    return;
                }
                alert('가게 삭제 성공');
                let ownerIdxValue = document.querySelector("#ownerIdx").value;
                location.href="/owner/selectStore/"+ownerIdxValue;
            });
        });
</script>