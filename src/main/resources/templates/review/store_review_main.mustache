{{>store/common/store_header}}
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 mt-5">
            <div>
                <h1>가게 명 : {{storeName}}</h1>
                <input type="hidden" value="{{storeIdx}}" id="hiddenStoreIdx">
                <h2 class="h2">우리 가게 리뷰 관리페이지</h2>
            </div>

            <div class="d-grid gap-2 mx-auto mb-5 col col-8 mt-5">
                <div class="input-group mb-3">
                    <input type="date" class="form-control" placeholder="Username" aria-label="Username" id="startDate">
                    <span class="input-group-text">~</span>
                    <input type="date" class="form-control" placeholder="Server" aria-label="Server" id="endDate">
                </div>

                <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" name="btnradio" id="allListBtn" autocomplete="off" checked value="all">
                    <label class="btn btn-outline-primary" for="allListBtn">전체({{countMap.allReviewCount}})</label>

                    <input type="radio" class="btn-check" name="btnradio" id="noReplyListBtn" autocomplete="off" value="noreply">
                    <label class="btn btn-outline-primary" for="noReplyListBtn">미답변({{countMap.notReplyReviewCount}})</label>

                    <button class="btn btn-success" id="getListBtn">조회</button>
                </div>

            </div>
            <script>
                document.getElementById('endDate').value = new Date().toISOString().substring(0, 10);;
            </script>

            <!-------------------------------------------------------------------------------------------------------------------->

            {{#reviewList}}
                <!--가게 답변 달린 경우-->
                {{#review_reply}}
                    <div class="mb-5">
                        <div class="card m-3">
                            <div class="card-header">
                                <strong class="d-block text-gray-dark">@{{user_nickname}}</strong>
                                <strong class="text-gray-dark"><label class="review-star-label">{{review_star}}</label> | {{review_write_date}}</strong>
                                주문한 메뉴도 가져오는게 맞나..
                            </div>
                            <div class="card-body">
                                <div>
                                    <img src="">이미지미지
                                </div>
                                <p class="comment-text">{{review_comment}}</p>
                            </div>
                            <div class="card-body bg-warning bg-opacity-10">
                                <strong>└사장님 답변</strong>
                                <br>
                                <p class="comment-text">{{review_reply}}</p>
                            </div>
                            <div class="card-footer justify-content-md-end d-grid gap-2 d-md-flex">
                                <button type="button" class="btn btn-sm btn-outline-primary" id="modal-reply-update-btn"
                                        data-bs-toggle="modal"
                                        data-bs-target="#update-reply-modal"
                                        data-bs-reviewidx="{{review_idx}}"
                                        data-bs-reviewreply="{{review_reply}}"
                                        data-bs-storeidx="{{store_idx}}">답변수정-모달</button>
                                <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn" id="deleteReplyBtn"
                                        bt-review-idx="{{review_idx}}"
                                        bt-store-idx="{{store_idx}}">답변삭제</button>
                            </div>
                        </div>
                    </div>
                {{/review_reply}}
                <!--가게 답변 달리지 않은 경우-->
                {{^review_reply}}
                        <div>
                            <div class="card m-3">
                                <div class="card-header">
                                    <strong class="d-block text-gray-dark">@{{user_nickname}}</strong>
                                    <strong class="text-gray-dark"><label class="review-star-label">{{review_star}}</label> | {{review_write_date}}</strong>
                                    주문한 메뉴도 가져오는게 맞나..
                                </div>
                                <div class="card-body">
                                    <div>
                                        <img src="">이미지미지
                                    </div>
                                    <p class="comment-text">{{review_comment}}</p>
                                </div>
                                <div class="card-footer justify-content-md-end d-grid gap-2 d-md-flex">
                                    <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn">리뷰삭제 요청요청</button>
                                    <button type="button" class="btn btn-sm btn-outline-primary" id="modal-reply-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#review-edit-modal"
                                            data-bs-reviewidx="{{review_idx}}"
                                            data-bs-reviewcomment="{{review_comment}}"
                                            data-bs-reviewstar="{{review_star}}"
                                            data-bs-storeidx="{{store_idx}}">사장님 답변 등록-모달</button>
                                </div>
                            </div>
                        </div>
                {{/review_reply}}
            {{/reviewList}}


        </main>
        {{>review/store_reply_create_modal}}
        {{>review/store_reply_update_modal}}
        <div class="paginaiton">

        </div>
    </div>
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<!-- create login & logout button -->
<script>
    const fooLogout = () => {
        window.sessionStorage.clear();
        alert('sessionStoreage clear success');
        location.href="/owner/store/main";
    }

    const fooLogin = () => {
        location.href="/loginForm/owner";
    }

    /** set left menuBar href */
    const set_menu = () => {
        const storeIdxVal = window.sessionStorage.getItem('storeIdx');
        const ownerIdxVal = JSON.parse(window.sessionStorage.getItem("memberData"));
        let ownerIdx = ownerIdxVal.memberData.ownerIdx;
        document.getElementById('first-item-href').setAttribute('href', '/owner/selectStore/' +ownerIdx);
        document.getElementById('second-item-href').setAttribute('href', '/owner/storeInfo/' +storeIdxVal);
        document.getElementById('third-item-href').setAttribute('href', '/owner/menu/'+storeIdxVal);
        document.getElementById('fourth-item-href').setAttribute('href', '/owner/menu/create/'+storeIdxVal);
        document.getElementById('fifth-item-href').setAttribute('href', '/owner/store/'+storeIdxVal+'/reviews');
        document.getElementById('sixth-item-href').setAttribute('href', '/owner/store/tradeHistory/'+storeIdxVal);
    };

    /** switch innerHTML from review star Number to star Icon */
    set_reviewstar_to_icon = () => {
        let starElements = document.querySelectorAll('.review-star-label');
        for(const starElement of starElements){
            let starValue = starElement.innerHTML;
            let starIcon = "";
            for (let i = 1; i <= starValue; i++) {
                starIcon = starIcon+"★"
            }
            starElement.innerHTML = starIcon;
        };
    };

    window.onload = () => {
        // 꺼내보자
        //console.log(JSON.stringify(window.sessionStorage.getItem("memberData")));

        const parentDiv = document.getElementById('login-logout-section');
        if(window.sessionStorage.getItem("token")){
            const logoutBtn = document.createElement('button');
            logoutBtn.setAttribute('class' , 'btn btn-outline-primary me-2');
            logoutBtn.onclick = fooLogout;
            logoutBtn.innerHTML = '로그아웃';
            parentDiv.appendChild(logoutBtn);

        }else{
            const loginBtn = document.createElement('button');
            loginBtn.setAttribute('class' , 'btn btn-outline-primary me-2');
            loginBtn.onclick = fooLogin;
            loginBtn.innerHTML = '로그인';
            parentDiv.appendChild(loginBtn);
        }

        set_menu();
        set_reviewstar_to_icon();
    }
</script>
</html>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<!-- delete store reply -->
<script>
    const deleteReplyBtns = document.querySelectorAll('#deleteReplyBtn');
    deleteReplyBtns.forEach(deleteReplyBtn => {
       deleteReplyBtn.addEventListener('click', () => {
           if(confirm('해당 답변을 삭제하시겠습니까?') == false){
               return;
           };

           const targetBtn = event.target;
           const reviewIdx = targetBtn.getAttribute("bt-review-idx");
           const storeIdx = targetBtn.getAttribute("bt-store-idx");
           console.log("storeIdx==>"+storeIdx);

           //삭제 API 호출 및 처리
           const url = `/owne/delete/reply/${reviewIdx}`;
           fetch(url, {
               method: "DELETE"
           }).then(response => response.json())
                .then(res => {
                    if(res.resultNum == 1){
                        alert('삭제 성공');
                        location.href = "/owner/store/"+storeIdx+"/reviews";
                    }else{
                        alert('삭제 실패');
                    }
                });

       });
    });
</script>

<!-- 조회버튼 클릭 시 조건에 맞는(담은) URL을 컨트롤러로 전송-->
<script>
    const allListBtn = document.getElementById('getListBtn');
    allListBtn.addEventListener('click', () => {
        const selectedRadio = $('input[name="btnradio"]:checked').val();
        const storeIdxVal = $('#hiddenStoreIdx').val();
        let startDate = $('#startDate').val()==""?"null":$('#startDate').val();
        let endDate = $('#endDate').val();
        location.href= `/owner/store/${storeIdxVal}/reviews/${selectedRadio}/${startDate}/${endDate}`;
    });
</script>
<!--위에 스크립트 방식은 주소창이 너무 길어지는 것 같아서 body에 json을 담아 요청하려고 하는데...-->
<script>
    // const allListBtn = document.getElementById('getListBtn');
    // allListBtn.addEventListener('click', () => {
    //     //location.href='/owne/store/showReviews?selectedRadio='+$('input[name="btnradio"]:checked').val()
    //     //        +'&storeIdxVal='+$('#hiddenStoreIdx').val()+'&startDate='+$('#startDate').val()+'&endDate='+$('#endDate').val();
    //
    //     $.ajax({
    //         type: 'GET',
    //         url: '/owne/store/showReviews',
    //         data: {
    //             selectedRadio : $('input[name="btnradio"]:checked').val(),
    //             storeIdxVal : $('#hiddenStoreIdx').val(),
    //             startDate : $('#startDate').val(),
    //             endDate : $('#endDate').val()
    //         },
    //         dataType: "json",
    //         success : function (data){
    //             console.log(data);
    //         }
    //     });
    //
    // });
</script>



