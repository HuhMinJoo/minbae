<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>
</head>
<body>
{{>layout/main/main_header}}

    <h2 style="text-align: center">주문 현황</h2>
    <hr>
    <div id="order_state_list">

    </div>
{{>layout/main/main_footer}}
</body>
<script>
    let get_login = JSON.parse(sessionStorage.getItem("memberData"));
    let user_idx = get_login.memberData.userIdx;

    fetch(`/user/order/state/${user_idx}`)
            .then((response) => response.json())
            .then((data) => {

                data.data.forEach( (data, idx) => {
                    let order_date = new Date(data.order_date);
                    let order_state = '';
                    if(data.order_state == 0){
                        order_state = '접수 완료/접수 대기중';
                    }else if(data.order_state == 1){
                        order_state = '주문 수락/조리중';
                    }else if(data.order_state == 2){
                        order_state = '배달중';
                    }else if(data.order_state == 3){
                        order_state = '배달 완료';
                    }else if(data.order_state == 4){
                        order_state = '주문 거절';
                    }else if(data.order_state == 5){
                        order_state = '픽업 완료';
                    }

                    // let order_store_text = `<div class="card mb-3" style="max-width: 750px;">
                    //                           <div class="row g-0">
                    //                             <div class="col-md-8">
                    //                               <div class="card-body">
                    //                                 <h5 class="card-title">${data.store_name}</h5>
                    //                                 <p class="card-text"><small class="text-muted">*주문 일시 : </small><span style="font-size: small">${order_date.toLocaleDateString()}</span></p>
                    //                                 <p class="card-text" style="color: cornflowerblue" id="order_state_color${idx}">${order_state}</p>
                    //                                 <div>
                    //                                     <button type="button" class="btn btn-outline-primary" onclick="reviewCreate(${data.store_idx}, ${data.trade_history_idx})" style="display: none" id="reviewCreate${idx}">리뷰 작성하기</button>
                    //                                 </div>
                    //                               </div>
                    //                             </div>
                    //                          </div>
                    //                       </div>`
                    let order_store_text = `<div class="card mb-3" style="max-width: 750px;">
                                      <div class="row g-0">
                                        <div class="col-md-4">
                                            <img src="/user/image/${data.store_detail_info_img}" class="img-fluid rounded-start" style="height: 13.5rem; width: 15rem">
                                        </div>
                                        <div class="col-md-8">
                                          <div class="card-body">
                                            <h5 class="card-title">${data.store_name}</h5>
                                            <p class="card-text"><small class="text-muted">*주문 일시 : </small><span style="font-size: small">${order_date.toLocaleDateString()}</span></p>
                                            <p class="card-text">주문 금액 : ${data.order_price}원</p>
                                            <p class="card-text" style="color: cornflowerblue" id="order_state_color${idx}">${order_state}</p>
                                            <div>
                                                <button type="button" class="btn btn-outline-primary" onclick="reviewCreate(${data.store_idx}, ${data.trade_history_idx})" style="display: none" id="reviewCreate${idx}">리뷰 작성하기</button>
                                            </div>
                                          </div>
                                        </div>
                                     </div>
                                  </div>`

                    let div_order_state = document.createElement('div');
                    div_order_state.innerHTML = order_store_text
                    let order_state_list = document.getElementById('order_state_list');
                    order_state_list.appendChild(div_order_state);

                    console.log('data.review_comment -> ' + data.review_comment)

                    let order_state_color = document.getElementById(`order_state_color${idx}`);
                    let order_state_text = order_state_color.innerText;
                    if(order_state_text == '배달 완료' || order_state_text == '픽업 완료'){
                        order_state_color.style.color = '#999999'
                        if(data.review_comment === undefined){
                            document.getElementById(`reviewCreate${idx}`).style.display = 'block';
                        }
                    }else if(order_state_text == '주문 수락/조리중'){
                        order_state_color.style.color = 'mediumpurple'
                    }else if(order_state_text == '배달중'){
                        order_state_color.style.color = 'indianred'
                    }else if(order_state_text == '주문 거절'){
                        order_state_color.style.color = 'midnightblue'
                    }
                } )
            });

    const reviewCreate = (store_idx, trade_history_idx) => {
        console.log(trade_history_idx);
        window.location.href = `/user/review/form/${store_idx}/${trade_history_idx}`;
    }

    //소켓연결
    let socket = new SockJS('/chat');
    let stompClient = Stomp.over(socket);
    stompClient.connect({}, function (frame) {
        console.log('Connected: ' + frame);
        //응답 받기
        stompClient.subscribe(`/topic/user/${user_idx}`, function (greeting) {
            location.reload();
        });
    });
</script>
</html>
