<style>
    .state_img_div {
        float: left;
        width: 70px;
        height: 70px;
    }

    .state_img_div::after {
        content: '';

        display: block;

        clear: both;
    }
</style>

<div id="print_div"></div>
<script type="text/javascript"
        src="//dapi.kakao.com/v2/maps/sdk.js?appkey=fd415bfe990421083c1a4135da20924a&libraries=services"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.3.0/sockjs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js"></script>

<script>
    const memData = JSON.parse(window.sessionStorage.getItem("memberData"));
    fetch("/user/tradehistory/history?userIdx=" + memData.memberData.userIdx, {
        method: "get",
        headers: {"Content-Type": "application/json; charset:UTF-8"}
    })
            .then(response => response.json())
            .then(res => {
                var allTradeIdx = [];
                console.log(res["49"]);
                for (key in res) {
                    allTradeIdx.push(key);
                }
                for (var i = 0; i < allTradeIdx.length; i++) {
                    var div1 = document.createElement('div');
                    div1.id = "child_div" + res[allTradeIdx[i]].tradeHistoryIdx;
                    div1.style.marginBottom="30px";
                    var div2 = document.createElement('div');
                    var div3 = document.createElement('div');
                    div3.className = "state_img_div";
                    var img = document.createElement('img');
                    img.src = "/user/image/" + res[allTradeIdx[i]].menu["0"].menuImg;
                    img.width="70px";
                    img.height="70px";
                    var div4 = document.createElement('div');
                    var div5 = document.createElement('div');
                    var span1 = document.createElement('span');
                    span1.innerText = res[allTradeIdx[i]].storeName;
                    var div6 = document.createElement('div');
                    var span2 = document.createElement('span');
                    span2.innerText = res[allTradeIdx[i]].menu["0"].menuName + "  ";
                    var span3 = document.createElement('span');
                    span3.innerText = res[allTradeIdx[i]].menuCount["0"].count + "개  ";
                    var span4 = document.createElement('span');
                    span4.innerText = (res[allTradeIdx[i]].menu["0"].menuPrice * res[allTradeIdx[i]].menuCount["0"].count) + "원";
                    var div7 = document.createElement('div');
                    var span5 = document.createElement('span');
                    var div8 = document.createElement('div');
                    div8.id = "map" + res[allTradeIdx[i]].tradeHistoryIdx;
                    div8.style.margin="auto";
                    div8.style.width = "80%";
                    div8.style.height = "300px";
                    if (res[allTradeIdx[i]].orderState != 2) {
                        div8.style.display = "none";
                    } else {

                    }
                    span5.id = "state_span" + res[allTradeIdx[i]].tradeHistoryIdx;
                    span5.innerText = getOrderState(res[allTradeIdx[i]].orderState);
                    div3.append(img);
                    div1.append(div8);
                    div1.append(div2);
                    div2.append(div3);
                    div2.append(div4);
                    div4.append(div5);
                    div5.append(span1);
                    div4.append(div6);
                    div1.append(div7);
                    div6.append(span2);
                    div6.append(span3);
                    div6.append(span4);
                    div7.append(span5);
                    document.getElementById("print_div").append(div1);
                }
                var sock = new SockJS("/chat");
                var client = Stomp.over(sock);
                isStomp = true;
                socket = client;
                socket.connect({}, function (frame) {
                    socket.subscribe('/topic/user/' + memData.memberData.userIdx, function (event) {
                        var message = JSON.parse(event.body);
                        if (message.message == "수락") {
                            document.getElementById('state_span' + message.tradehistoryidx).innerText = "조리중";
                            alert('주문 접수가 완료 되었습니다');
                        }
                        if (message.message == "픽업완료") {
                            document.getElementById('map' + message.tradeHistoryIdx).style.display = "block";
                            document.getElementById('state_span' + message.tradeHistoryIdx).innerText = "배달중";
                            var mapContainer = document.getElementById('map' + message.tradeHistoryIdx),
                                    mapOption = {
                                        center: new kakao.maps.LatLng((Number(message.storeLat)+Number(JSON.parse(window.localStorage.getItem("user_latlng")).user_lat))/2
                                                , (Number(message.storeLng)+Number(JSON.parse(window.localStorage.getItem("user_latlng")).user_lng))/2),
                                        level: 6
                                    };

                            console.log(message.storeLat);
                            console.log(JSON.parse(window.localStorage.getItem("user_latlng")).user_lat);
                            console.log(message.storeLat+JSON.parse(window.localStorage.getItem("user_latlng")).user_lat);
                            console.log((Number(message.storeLat)+Number(JSON.parse(window.localStorage.getItem("user_latlng")).user_lat))/2);
                            var map = new kakao.maps.Map(mapContainer, mapOption);
                            //
                            var storeMarkerImage = new kakao.maps.MarkerImage("https://i.esdrop.com/d/f/3IfGDhTdT6/0X8EYtgq4Z.png", new kakao.maps.Size(30, 30), {offset: new kakao.maps.Point(15, 69)})
                            var storeMarkerPosition = new kakao.maps.LatLng(message.storeLat, message.storeLng);
                            var storeMarker = new kakao.maps.Marker({
                                position: storeMarkerPosition,
                                image: storeMarkerImage
                            });
                            storeMarker.setMap(map);

                            var iwContent = message.storeName,
                                    iwPosition = new kakao.maps.LatLng(message.storeLat, message.storeLng);
                            var infowindow = new kakao.maps.InfoWindow({
                                position: iwPosition,
                                content: iwContent
                            });
                            infowindow.open(map, storeMarker);
                            var delMarkerImage = new kakao.maps.MarkerImage("https://i.esdrop.com/d/f/3IfGDhTdT6/yK5FGL4WFo.png", new kakao.maps.Size(30, 30), {offset: new kakao.maps.Point(15, 69)});
                            var delMarkerPosition = new kakao.maps.LatLng(37.55, 126.9);
                            var delMarker = new kakao.maps.Marker({
                                position: delMarkerPosition,
                                image: delMarkerImage
                            });
                            delMarker.setMap(map);
                            socket.subscribe('/topic/deliver/' + message.deliverIdx, function (event) {
                                var position = new kakao.maps.LatLng(37.5568626917288, 126.941574169624);
                                delMarker.setPosition(position);
                            });

                            var userMarkerImage = new kakao.maps.MarkerImage("https://i.esdrop.com/d/f/3IfGDhTdT6/0X8EYtgq4Z.png",new kakao.maps.Size(30, 30), {offset: new kakao.maps.Point(15, 69)});
                            var userMarkerPosition = new kakao.maps.LatLng(JSON.parse(window.localStorage.getItem("user_latlng")).user_lat, JSON.parse(window.localStorage.getItem("user_latlng")).user_lng);
                            var userMarker = new kakao.maps.Marker({
                                position: userMarkerPosition,
                                image: userMarkerImage
                            });
                            userMarker.setMap(map);
                            var iwContent = message.userBasicAddr,
                                    iwPosition = new kakao.maps.LatLng(JSON.parse(window.localStorage.getItem("user_latlng")).user_lat, JSON.parse(window.localStorage.getItem("user_latlng")).user_lng);

                            var infowindow = new kakao.maps.InfoWindow({
                                position: iwPosition,
                                content: iwContent
                            });
                            infowindow.open(map, userMarker);

                        }
                        if (message.message == "배달완료") {
                            document.getElementById('child_div' + message.tradeHistoryIdx).remove();
                            alert('배송이 완료되었습니다');
                        }
                    });
                });
            });

    function getOrderState(orderState) {
        if (orderState == "0") return "주문 접수중";
        if (orderState == "1") return "조리중";
        if (orderState == "2") return "배달중";
    }

</script>
