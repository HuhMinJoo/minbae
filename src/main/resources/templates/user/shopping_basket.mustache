<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <title>Document</title>
    <style>
        #b_delete{
            float:right;
        }
    </style>
    <script>
        const a_back = () => {
            location.href = document.referrer;
        }
    </script>
</head>
<body>
{{>layout/main/main_header}}
    <a href="javascript:a_back();" class="link-secondary"><-</a>
    <script>

        //      조회
        let datas = JSON.parse(sessionStorage.getItem('item'));
        let shoppingList_store_name = `<div id='store_name'>${datas[0][2]}</div><hr>`;
        let div_shopping_store_name = document.createElement('div');
        div_shopping_store_name.innerHTML = shoppingList_store_name;
        document.body.appendChild(div_shopping_store_name);

        let deliverPrice = 0;
        let realFinalPrice = deliverPrice;
        let realFinalQuantity = 0;
        for(let i = 0; i < datas.length; i++){

            let data = datas[i]
            deliverPrice = data[5];

            let shoppingList = '';
            shoppingList += `<div class="card mb-3" style="max-width: 750px;">
                              <div class="row g-0">
                                <div class="col-md-4">
                                  <img src="/user/image/${data[8]}" class="img-fluid rounded-start" id='menu_img${i}' style="height: 12rem; width: 15rem">
                                </div>
                                <div class="col-md-8">
                                  <div class="card-body">
                                    <button type="button" class="btn-close" aria-label="Close" id="b_delete" onclick='basket_delete(${i})'></button>
                                    <h5 class="card-title" id='menu_name${i}'>${data[3]}</h5>
                                    <p class="card-text"><small class="text-muted">*가격 : </small><span id='menu_price${i}' style="font-size: small">${data[4]}</span></p>
                                    <p class="card-text" id='total_price${i}'>${data[7]}원</p>
                                    <div id='total_quantity${i}'>
                                    <button type="button" class="btn btn-outline-secondary" onclick='count("plus", ${i})'>+</button>
                                    <span id='quantity${i}'>${data[6]}</span>
                                    <button type="button" class="btn btn-outline-secondary" onclick='count("minus", ${i})'>-</button>
                                  </div>
                                </div>
                                </div>
                              </div>
                            </div>
                            <hr>`

            // //삭제 버튼, 메뉴 이름
            // shoppingList += `<div>
            //                     <span id='menu_name${i}'>${data[3]}</span>
            //                     <button type="button" class="btn-close" aria-label="Close" id="b_delete" onclick='basket_delete(${i})'></button>
            //                 </div>`;
            // shoppingList += `<div id='menu_img${i}'>${data[8]}</div>`;
            // shoppingList += `<div>
            //                     <label style="font-size: small">*가격 : </label>
            //                     <span id='menu_price${i}' style="font-size: small">${data[4]}</span>
            //                 </div>`;
            // shoppingList += `<div id='total_price${i}'>${data[7]}원</div>`;

            //수량 버튼 생성
            // shoppingList += `<div id='total_quantity${i}'>`;
            // shoppingList += `<button type="button" class="btn btn-outline-secondary" onclick='count("plus", ${i})'>+</button>`
            // shoppingList += `<span id='quantity${i}'>${data[6]}</span>`
            // shoppingList += `<button type="button" class="btn btn-outline-secondary" onclick='count("minus", ${i})'>-</button>`
            // shoppingList += '</div>';
            // shoppingList += '<hr>';

            let div_shoppingList = document.createElement('div');
            div_shoppingList.innerHTML = shoppingList;
            document.body.appendChild(div_shoppingList);

            realFinalPrice += data[7];
            realFinalQuantity += data[6];
        }

        //장바구니 메뉴 삭제 메소드
        const basket_delete = (i) => {
            if(datas.length == 1){
                sessionStorage.removeItem("item");
                location.href = document.referrer;
            }else{
                datas.splice(i, 1);
                sessionStorage.setItem('item', JSON.stringify(datas));
                window.location.reload();
            }
        }

        //수량 메소드
        let totalQuantity = 0;
        let totalPrice = 0;
        function count(type, i)  {

            // 결과를 표시할 element
            const resultElement = document.getElementById(`quantity${i}`);
            const s_final_price = document.getElementById(`total_price${i}`);
            const s_fix_price = document.getElementById(`menu_price${i}`);

            // 현재 화면에 표시된 값
            totalQuantity = resultElement.innerText;
            totalPrice = parseInt(s_final_price.innerText);
            let price = parseInt(s_fix_price.innerText);

            // 더하기/빼기
            if(type === 'plus') {
                totalQuantity = parseInt(totalQuantity) + 1;
                realFinalQuantity = realFinalQuantity + 1;
                totalPrice = totalPrice + price;
                realFinalPrice += price;

            }else if(type === 'minus')  {
                if (totalQuantity <= 1){
                    return;
                }
                totalQuantity = parseInt(totalQuantity) - 1;
                realFinalQuantity = realFinalQuantity - 1;
                totalPrice = totalPrice - price;
                realFinalPrice -= price;
            }

            //세션스토리지 업데이트
            datas[i][6] = totalQuantity;
            datas[i][7] = totalPrice;

            sessionStorage.setItem('item', JSON.stringify(datas));

            // 결과 출력
            resultElement.innerText = totalQuantity;
            s_final_price.innerText = ""+totalPrice+'원';
            document.getElementById('bottom_totalPrice').innerHTML = `${realFinalPrice}원`;

            let t_or_o = sessionStorage.getItem('deliver_or_take_out')
            if(t_or_o == 'take_out'){
                document.getElementById('order_button').innerHTML = `<span class="badge bg-secondary">${realFinalQuantity}</span> <span id="b_price">${realFinalPrice}원 배달 주문하기</span>`;
                document.getElementById('expected_price').innerHTML = `${realFinalPrice}원`;
            }else{
                document.getElementById('order_button').innerHTML = `<span class="badge bg-secondary">${realFinalQuantity}</span> <span id="b_price">${realFinalPrice + parseInt(deliverPrice)}원 배달 주문하기</span>`;
                document.getElementById('expected_price').innerHTML = `${realFinalPrice + parseInt(deliverPrice)}원`;
            }
        }

        //더 담으러 가기
        let more = `<a href="/user/store/detail/${datas[0][9]}/${datas[0][0]}/order" class="link-success">더 담으러 가기</a><hr>`;
        let div_more = document.createElement('div');
        div_more.innerHTML = more;
        document.body.appendChild(div_more);

        //배달 방법
        let select = `<select class="form-select form-select-sm" aria-label=".form-select-sm example" onchange="select_deliver_or_take_out()" id="select_deliver_or_take_out">
                            <option value="deliver" selected>배달로 받을게요</option>
                            <option value="take_out">포장해서 직접 가져갈게요</option>
                      </select>
                      <hr>`;
        let div_select = document.createElement('div');
        div_select.innerHTML = select;
        document.body.appendChild(div_select);

        //총 주문 금액, 배달팁
        let bottom_totalPrice = `<div>
                                    <span class="float-left" >총 주문 금액</span><br>
                                    <span class="float-right" id="bottom_totalPrice">${realFinalPrice}원</span>
                                 </div><br>
                                 <div id='id_deliverPrice'>
                                    <span class="float-left">배달팁</span><br>
                                    <span class="float-right">${deliverPrice}원</span>
                                 </div>
                                 <hr>`;
        let div_totalPrice = document.createElement('div');
        div_totalPrice.innerHTML = bottom_totalPrice;
        document.body.appendChild(div_totalPrice);

        //결제 예정 금액
        let expected_price = `<div>
                                    <span class="float-left">결제 예정 금액</span><br>
                                    <span class="float-right" id="expected_price">${realFinalPrice  + parseInt(deliverPrice)}원</span>
                              </div>`;
        let div_expected = document.createElement('div');
        div_expected.innerHTML = expected_price;
        document.body.appendChild(div_expected);

        //user_idx 가져오기
        let get_login = sessionStorage.getItem("memberData");
        let login = JSON.parse(get_login);
        let user_idx = login.memberData.userIdx;

        //배달 or 포장
        let deliver_or_take_out = $("#select_deliver_or_take_out option:selected").val();
        const select_deliver_or_take_out = () => {
            deliver_or_take_out = $("#select_deliver_or_take_out option:selected").val();

            //포장인지 배달인지 세션스토리지에 저장 -> 주문 페이지에서 사용
            sessionStorage.setItem('deliver_or_take_out', deliver_or_take_out);

            //포장일 경우 배달팁 안 보이게
            if(deliver_or_take_out == 'take_out'){
                document.getElementById('id_deliverPrice').style.display = 'none';
                document.getElementById('expected_price').innerText = `${realFinalPrice}원`;
                console.log(111)
                console.log(document.getElementById('b_price'))
                document.getElementById('b_price').innerText = `${realFinalPrice}원 배달 주문하기`;
            }else{
                document.getElementById('id_deliverPrice').style.display = 'block';
                document.getElementById('expected_price').innerText = `${realFinalPrice + parseInt(deliverPrice)}원`;
                console.log(222)
                console.log(document.getElementById('b_price'))
                document.getElementById('b_price').innerText = `${realFinalPrice + parseInt(deliverPrice)}원 배달 주문하기`;
            }
        }
        //포장인지 배달인지 세션스토리지에 저장 -> 주문 페이지에서 사용
        sessionStorage.setItem('deliver_or_take_out', deliver_or_take_out);

        //주문 버튼 생성
        let order_button = `<button type="button" id="order_button" class="btn btn-primary mx-auto d-block" onclick="b_order()">
                              <span class="badge bg-secondary">${realFinalQuantity}</span>
                              <span id="b_price">${realFinalPrice + parseInt(deliverPrice)}원 배달 주문하기</span>
                            </button>`

        let div_bt_realFinalPrice = document.createElement('div');
        div_bt_realFinalPrice.innerHTML = order_button;
        document.body.appendChild(div_bt_realFinalPrice);

        //최조 주문 금액 유효성 검사 & 주문 페이지 이동
        const b_order = () => {
            fetch(`/user/store/minimum/price/${datas[0][0]}`)
            .then((response) => response.json())
            .then((data) => {
                if(realFinalPrice < data.data){
                    alert(`${data.data}원부터 주문할 수 있어요.`)
                }else{
                    location.href=`/user/order/page/${user_idx}`;
                }
            });
        }
    </script>
{{>layout/main/main_footer}}
</body>
</html>














