<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css"
    />
    <style>
        .insert {
            padding: 20px 30px;
            display: block;
            width: 600px;
            margin: 5vh auto;
            height: 70vh;
            border: 1px solid #dbdbdb;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }
        .insert .file-list {
            height: 50px;
            overflow: auto;
            border: 1px solid #989898;
            padding: 10px;
        }
        .insert .file-list .filebox p {
            font-size: 14px;
            margin-top: 10px;
            display: inline-block;
        }
        .insert .file-list .filebox .delete i{
            color: red;
            margin-left: 5px;
        }

        .star-rating {
            display: flex;
            flex-direction: row-reverse;
            font-size: 2.25rem;
            line-height: 2.5rem;
            justify-content: space-around;
            padding: 0 0.2em;
            text-align: center;
            width: 5em;
        }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            -webkit-text-fill-color: transparent; /* Will override color (regardless of order) */
            -webkit-text-stroke-width: 2.3px;
            -webkit-text-stroke-color: #2b2a29;
            cursor: pointer;
        }

        .star-rating :checked ~ label {
            -webkit-text-fill-color: gold;
        }

        .star-rating label:hover,
        .star-rating label:hover ~ label {
            -webkit-text-fill-color: #fff58c;
        }
    </style>

    <script>

        let fileNo = 0;
        let filesArr = new Array();

        /* 첨부파일 추가 */
        function addFile(obj) {

            let maxFileCnt = 3;   // 첨부파일 최대 개수
            let attFileCnt = document.querySelectorAll('.filebox').length;    // 기존 추가된 첨부파일 개수
            let remainFileCnt = maxFileCnt - attFileCnt;    // 추가로 첨부가능한 개수
            let curFileCnt = obj.files.length;  // 현재 선택된 첨부파일 개수

            // 첨부파일 개수 확인
            if (curFileCnt > remainFileCnt) {
                alert("첨부파일은 최대 " + maxFileCnt + "개까지 첨부 가능합니다.");
            }

            for (let i = 0; i < Math.min(curFileCnt, remainFileCnt); i++) {

                const file = obj.files[i];

                // 첨부파일 검증
                if (validation(file)) {
                    // 파일 배열에 담기
                    let reader = new FileReader();
                    reader.onload = function () {
                        filesArr.push(file);
                    };
                    reader.readAsDataURL(file)

                    // 목록 추가
                    let htmlData = '';
                    htmlData += '<div id="file' + fileNo + '" class="filebox">';
                    htmlData += '   <p class="name">' + file.name + '</p>';
                    htmlData += '   <a class="delete" onclick="deleteFile(' + fileNo + ');"><i class="far fa-minus-square"></i></a>';
                    htmlData += '</div>';
                    $('.file-list').append(htmlData); //.append()는 선택한 요소의 내용의 끝에 콘텐트를 추가
                    fileNo++;
                } else {
                    continue;
                }
            }
                // 초기화
                // document.querySelector("input[type=file]").value = '';
            }

            /* 첨부파일 검증 */
            function validation(obj) {
                const fileTypes = ['application/pdf', 'image/gif', 'image/jpeg', 'image/png', 'image/bmp', 'image/tif', 'application/haansofthwp', 'application/x-hwp'];
                if (obj.name.length > 100) {
                    alert("파일명이 100자 이상인 파일은 제외되었습니다.");
                    return false;
                } else if (obj.size > (100 * 1024 * 1024)) {
                    alert("최대 파일 용량인 100MB를 초과한 파일은 제외되었습니다.");
                    return false;
                } else if (obj.name.lastIndexOf('.') == -1) {
                    alert("확장자가 없는 파일은 제외되었습니다.");
                    return false;
                } else if (!fileTypes.includes(obj.type)) {
                    alert("첨부가 불가능한 파일은 제외되었습니다.");
                    return false;
                } else {
                    return true;
                }
            }

            /* 첨부파일 삭제 */
            function deleteFile(num) {
                document.querySelector("#file" + num).remove();
                filesArr[num].is_delete = true;
                document.querySelector("input[type=file]").value = '';

            }

            const drawStar = (target) => {
                document.querySelector(`.star span`).style.width = `${target.value * 10}%`;
            }

            function submit() {

                let review_comment = document.getElementById('review_comment').value;
                if(!$('input:radio[name=rating]').is(':checked') || review_comment == ""){
                    alert("작성란을 확인해 주세요.");
                } else {
                    let get_login = window.sessionStorage.getItem("memberData");
                    let login = JSON.parse(get_login);
                    let user_idx = login.memberData.userIdx;

                    let formData = new FormData();
                    formData.append('store_idx', document.getElementById('store_idx').value);
                    formData.append('trade_history_idx', document.getElementById('trade_history_idx').value);
                    formData.append('user_idx', user_idx);
                    formData.append('review_comment', review_comment);
                    // formData.append('upload',document.getElementById('upload').files[0]);
                    formData.append('review_star', document.querySelector("input[name='rating']:checked").value);

                    for (var i = 0; i < filesArr.length; i++) {
                        // 삭제되지 않은 파일만 폼데이터에 담기
                        if (!filesArr[i].is_delete) {
                            formData.append("upload", filesArr[i]);
                        }
                    }

                    fetch('/user/review/create', {
                        method: 'POST',
                        body: formData
                    })
                    .then((response) => response.json())
                    .then((data) => {
                        if(data.status == 'SUCCESS'){
                            alert('리뷰가 등록되었습니다.');
                            location.href = document.referrer;
                        }
                    });
                }
            }
    </script>

</head>
<body>
{{>layout/main/main_header}}
    <div class="insert">
        <input type="hidden" id="store_idx" value="{{store_idx}}"/>
        <input type="hidden" id="trade_history_idx" value="{{trade_history_idx}}"/>

        <h3 style="text-align: center">리뷰 작성</h3>
        <div class="input-group mb-3" style="margin-top: 1em">
            <input type="file" class="form-control" id="upload" onchange="addFile(this);" multiple>
            <label class="input-group-text" for="upload">Upload</label>
        </div>

        <div class="file-list">
        </div>

        <div class="star-rating space-x-4 mx-auto" style="margin-top: 0.3em">
            <input type="radio" id="5-stars" name="rating" value="5" v-model="ratings"/>
            <label for="5-stars" class="star pr-4">★</label>
            <input type="radio" id="4-stars" name="rating" value="4" v-model="ratings"/>
            <label for="4-stars" class="star">★</label>
            <input type="radio" id="3-stars" name="rating" value="3" v-model="ratings"/>
            <label for="3-stars" class="star">★</label>
            <input type="radio" id="2-stars" name="rating" value="2" v-model="ratings"/>
            <label for="2-stars" class="star">★</label>
            <input type="radio" id="1-star" name="rating" value="1" v-model="ratings" />
            <label for="1-star" class="star">★</label>
        </div>

        <div class="form-floating" style="margin-top: 1em">
            <textarea class="form-control" placeholder="Leave a comment here" id="review_comment" style="height: 190px" required></textarea>
            <label for="review_comment"><small>리뷰 작성</small></label>
        </div>

        <div style="text-align: center; margin-top: 1em" >
            <button type="button" class="btn btn-outline-secondary" onclick="submit()">완료</button>
        </div>
    </div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
{{>layout/main/main_footer}}
</body>
</html>