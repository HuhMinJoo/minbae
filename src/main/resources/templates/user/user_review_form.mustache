<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css"
    />
    <style>
        .insert {
            padding: 20px 30px;
            display: block;
            width: 600px;
            margin: 5vh auto;
            height: 90vh;
            border: 1px solid #dbdbdb;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }
        .insert .file-list {
            height: 200px;
            overflow: auto;
            border: 1px solid #989898;
            padding: 10px;
        }
        .insert .file-list .filebox p {
            font-size: 14px;
            margin-top: 10px;
            display: inline-block;
        }
        .insert .file-list .filebox .delete i{
            color: red;
            margin-left: 5px;
        }

        /*<!--img-->*/
        /*#c_img{*/
        /*    width: 10px;*/
        /*    height: 10px;*/
        /*    }*/

    </style>

    <script>

        let fileNo = 0;
        let filesArr = new Array();

        /* 첨부파일 추가 */
        function addFile(obj) {

            let maxFileCnt = 3;   // 첨부파일 최대 개수
            let attFileCnt = document.querySelectorAll('.filebox').length;    // 기존 추가된 첨부파일 개수
            let remainFileCnt = maxFileCnt - attFileCnt;    // 추가로 첨부가능한 개수
            let curFileCnt = obj.files.length;  // 현재 선택된 첨부파일 개수

            // 첨부파일 개수 확인
            if (curFileCnt > remainFileCnt) {
                alert("첨부파일은 최대 " + maxFileCnt + "개 까지 첨부 가능합니다.");
            }

            for (let i = 0; i < Math.min(curFileCnt, remainFileCnt); i++) {

                const file = obj.files[i];

                // 첨부파일 검증
                if (validation(file)) {
                    // 파일 배열에 담기
                    let reader = new FileReader();
                    reader.onload = function () {
                        filesArr.push(file);
                    };
                    reader.readAsDataURL(file)

                    // 목록 추가
                    let htmlData = '';
                    htmlData += '<div id="file' + fileNo + '" class="filebox">';
                    htmlData += '   <p class="name">' + file.name + '</p>';
                    htmlData += '   <a class="delete" onclick="deleteFile(' + fileNo + ');"><i class="far fa-minus-square"></i></a>';
                    htmlData += '</div>';
                    $('.file-list').append(htmlData); //.append()는 선택한 요소의 내용의 끝에 콘텐트를 추가
                    fileNo++;
                } else {
                    continue;
                }
            }

            // for (let image of event.target.files) {
            //     var reader = new FileReader();
            //     reader.onload = function(event) {
            //         var img = document.createElement("img");
            //         img.setAttribute("src", event.target.result);
            //         img.id = 'c_img';
            //         document.querySelector("div#multiple-container").appendChild(img);
            //     };
            //     console.log(image);
            //     reader.readAsDataURL(image);
            //
            // }

                // 초기화
                // document.querySelector("input[type=file]").value = '';
            }

            /* 첨부파일 검증 */
            function validation(obj) {
                const fileTypes = ['application/pdf', 'image/gif', 'image/jpeg', 'image/png', 'image/bmp', 'image/tif', 'application/haansofthwp', 'application/x-hwp'];
                if (obj.name.length > 100) {
                    alert("파일명이 100자 이상인 파일은 제외되었습니다.");
                    return false;
                } else if (obj.size > (100 * 1024 * 1024)) {
                    alert("최대 파일 용량인 100MB를 초과한 파일은 제외되었습니다.");
                    return false;
                } else if (obj.name.lastIndexOf('.') == -1) {
                    alert("확장자가 없는 파일은 제외되었습니다.");
                    return false;
                } else if (!fileTypes.includes(obj.type)) {
                    alert("첨부가 불가능한 파일은 제외되었습니다.");
                    return false;
                } else {
                    return true;
                }
            }

            /* 첨부파일 삭제 */
            function deleteFile(num) {
                document.querySelector("#file" + num).remove();
                filesArr[num].is_delete = true;

            }

            /* 폼 전송 */
            // function submitForm() {
            //     // 폼데이터 담기
            //     var form = document.querySelector("form");
            //     var formData = new FormData(form);
            //     for (var i = 0; i < filesArr.length; i++) {
            //
            //         // 삭제되지 않은 파일만 폼데이터에 담기
            //         if (!filesArr[i].is_delete) {
            //             formData.append("attach_file", filesArr[i]);
            //         }
            //     }
            //
            //     $.ajax({
            //         method: 'POST',
            //         url: '/user/review/create',
            //         dataType: 'json',
            //         data: formData,
            //         async: true,
            //         timeout: 30000,
            //         cache: false,
            //         headers: {'cache-control': 'no-cache', 'pragma': 'no-cache'},
            //         success: function () {
            //             alert("파일업로드 성공");
            //         },
            //         error: function (xhr, desc, err) {
            //             alert('에러가 발생 하였습니다.');
            //             return;
            //         }
            //     })
            // }

            function submit() {

                let formData = new FormData();
                formData.append('store_idx', document.getElementById('store_idx').value);
                formData.append('review_comment', document.getElementById('review_comment').value);
                // formData.append('upload',document.getElementById('upload').files[0]);
                formData.append('review_star', $("input[name='review_star']:checked").val());

                for (var i = 0; i < filesArr.length; i++) {

                    // 삭제되지 않은 파일만 폼데이터에 담기
                    if (!filesArr[i].is_delete) {
                        formData.append("upload", filesArr[i]);
                    }
                }

                fetch('/user/review/create', {
                    method: 'POST',
                    body: formData
                })
                .then((response) => response.json())
                .then((data) => {
                    console.log(data);
                });
            }

    </script>

</head>
<body>

    <div class="insert">
<!--        <form method="POST" onsubmit="return false;" enctype="multipart/form-data">-->
            <input type="hidden" id="store_idx" value="1"/>
            <div>
                <input type="text" id="review_comment">
            </div>
            <div>
                <input type="radio" id="star1" name="review_star" value="1">1
                <input type="radio" id="star2" name="review_star" value="2">2
                <input type="radio" id="star3" name="review_star" value="3">3
                <input type="radio" id="star4" name="review_star" value="4">4
                <input type="radio" id="star5" name="review_star" value="5">5
            </div>
            <input type="file" id="upload" onchange="addFile(this);" multiple />
            <div class="file-list">
<!--                <div id="multiple-container"></div>-->
            </div>
            <button onclick="submit()">완료</button>
<!--        </form>-->
<!--        <button type="button" onclick="submitForm()">전송</button>-->
    </div>

<!--        <input type="hidden" id="store_idx" value="1"/>-->
<!--        <div>-->
<!--            <input type="text" id="review_comment">-->
<!--        </div>-->
<!--        <div>-->
<!--            <input type="radio" id="star1" name="review_star" value="1">1-->
<!--            <input type="radio" id="star2" name="review_star" value="2">2-->
<!--            <input type="radio" id="star3" name="review_star" value="3">3-->
<!--            <input type="radio" id="star4" name="review_star" value="4">4-->
<!--            <input type="radio" id="star5" name="review_star" value="5">5-->
<!--        </div>-->
<!--        <div>-->
<!--            <input type="file" id="upload" multiple>-->
<!--        </div>-->
<!--    <button onclick="submit()">완료</button>-->


<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
</body>
</html>