<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.minbae.user.dao.UserMapper">

    <select id="findStoreByCategoryOrder" resultType="hashmap">
        SELECT
            count(*) AS orderCnt, truncate(avg(review_star), 1) starAvg, s.*, sd.*
        FROM trade_history th
                 left join store s on th.store_idx = s.store_idx
                 left join store_detail sd on s.store_idx = sd.store_idx
                 left join review r on s.store_idx = r.store_idx
        where s.store_category = #{category}
        GROUP BY th.store_idx HAVING count(*) >= 0
        order by orderCnt desc;
    </select>

    <select id="findStoreByNotInIdxs" resultType="hashmap">
        select
            s.*, sd.*, truncate(avg(r.review_star), 1) starAvg
        from store s
                left join store_detail sd on s.store_idx = sd.store_idx
                left join review r on s.store_idx = r.store_idx
        where
            <if test="idxs.size() != 0">
                s.store_idx not in (
                <foreach collection="idxs" item="item" separator=",">
                    #{item}
                </foreach>
                )
                and
            </if>

            s.store_category = #{category}
        group by r.store_idx;
    </select>

    <select id="findStoreByCategoryStar" resultType="hashMap">
        select
            truncate(avg(r.review_star), 1) starAvg, s.*, sd.*
        from review
                 left join store s on s.store_idx = review.store_idx
                 left join store_detail sd on s.store_idx = sd.store_idx
                 left join review r on s.store_idx = r.store_idx
        where s.store_category = #{categoryEn}
        group by s.store_idx
        order by starAvg desc
    </select>

    <select id="findStoreById" resultType="hashMap">
        select
            s.*, sd.*, truncate(avg(r.review_star), 1) starAvg
        from store s
                 left join store_detail sd on s.store_idx = sd.store_idx
                 left join review r on s.store_idx = r.store_idx
        where s.store_idx = #{store_idx}
        group by s.store_idx
    </select>

    <select id="findReviewByCount" resultType="hashMap">
        select
            count(review_comment) commentCnt, count(review_reply) replyCnt
        from
            review
        where store_idx = #{store_idx}
    </select>

    <select id="findReviewBykingMenu" resultType="hashMap">
        select
            *
        from menu
        where store_idx = #{store_idx} and menu_king_menu = 1
        order by menu_sunbun
    </select>

    <select id="findByMenuList" resultType="hashMap">
        select
            *
        from menu
        where store_idx = #{store_idx}
        order by menu_sunbun
    </select>

    <select id="findStoreByMenuIdx" resultType="hashMap">
        select
            *
        from menu
                 left join store s on menu.store_idx = s.store_idx
                 left join store_detail sd on s.store_idx = sd.store_idx
        where menu_idx = #{menu_idx}
    </select>

    <insert id="reviewCreate">
        INSERT INTO
            review (`review_comment`, `review_img1`, `review_img2`, `review_img3`, `review_star`, `review_write_date`,`store_idx`)
        VALUES (
                   #{review_comment},
                   #{review_img1},
                   #{review_img2},
                   #{review_img3},
                   #{review_star},
                   sysdate(),
                   #{store_idx}
               )
    </insert>

    <select id="reviewList" resultType="hashMap">

        select
            r.*, s.store_name
        from review r
                 left join store s on r.store_idx = s.store_idx
        where r.user_idx = #{user_idx}
        order by r.review_write_date desc;
    </select>

    <select id="reviewCnt" resultType="hashMap">
        select
            count(*) reviewCnt
        from review
        where user_idx = #{user_idx}
        group by user_idx
    </select>

    <delete id="reviewDel">
        delete from
                   review
        where review_idx = #{review_idx};
    </delete>

</mapper>
